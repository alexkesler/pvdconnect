<?xml version="1.0" encoding="UTF-8"?>

<!--
    This is the main configuration file for the server side Spring setup, which mostly is about configuring SpringMVC.
    We use annotation based configuration however so this file is really quite simple. If you want to add database or
    security support via Spring (which I'd highly recommend) then you can do so in this file.

    In the client we are able to avoid the XML configuration file using the @Configuration annotation on a factory
    class. Currently on the server this won't cut it, so we need to have this minimal XML file. The next version of
    Spring looks to include a way to avoid this.
-->


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-3.0.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd" >

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven/>

    <!-- Scans the classpath of this application for @Components to deploy as beans -->
    <context:component-scan base-package="org.kesler.server.controller"/>

    <!--<jpa:repositories base-package="org.kesler.server.repository"/>-->

    <bean id="checkRepository" class="org.kesler.server.repository.support.CheckRepositorySimpleImpl"/>
    <bean id="branchRepository" class="org.kesler.server.repository.support.BranchRepositorySimpleImpl"/>
    <bean id="checkService" class="org.kesler.server.service.support.CheckServiceImpl"/>
    <bean id="causeService" class="org.kesler.server.service.support.CauseServiceImpl"/>

    <bean id="startupWatcher" class="org.kesler.server.StartupWatcher"/>

    <task:scheduler id="taskScheduler"/>
    <task:executor id="taskExecutor" pool-size="1"/>
    <task:annotation-driven executor="taskExecutor" scheduler="taskScheduler" />

    <bean id="checkScheduler" class="org.kesler.server.schedule.CheckScheduler" />

</beans>